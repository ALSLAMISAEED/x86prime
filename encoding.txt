2-addr format (2 bytes)
000ooooo ddddxxxx (arithmetic, ret, stop, movq, indir-call, indir-jmp)
   00000          stop
   00001          call x,d (indirect call)
   00010          jmp x (indirect jmp)
   00011          ret x
   00100          movq
   1aaaa          arithmetic

2-addr + 16-bit constant format (4 bytes)
001ooooo ddddxxxx ii..16..ii (arithmetic, mov imm, call, jmp)
   0aaaa                     arithmetic
   10000                     mov imm
   10010                     call imm(ip),d (direct relative call)
   10011                     jmp imm(ip) (direct relative jump)

2-addr + 32-bit constant format (6 bytes)
010ooooo ddddxxxx ii..32..ii (arithmetic, mov imm, call, jmp)
   0aaaa                     arithmetic
   10000                     mov imm
   10010                     call imm(ip),d (ip relative call)
   10011                     jmp imm(ip) (ip relative jmp)

2-addr + 64-bit constant format (10 bytes)
011ooooo ddddxxxx ii..64..ii (arithmetic, mov imm, call, jmp)
   0aaaa                     arithmetic
   10000                     movabsq (mov 64-bit imm)
   10010                     call imm,d (absolute call)
   10011                     jmp imm (absolute jmp)

3-addr format (3 bytes)
100ooooo ddddxxxx yyyycccc (arithmetic, load/store, leaq, cscc)
   0aaaa              0000 arithmetic
   10smm              rrrr load, s=sign extend, mm=op size
   110mm              rrrr store, mm=op size
   11100              rrrr leaq
   11101              cccc cscc


3-addr + 16-bit constant format (5 bytes)
110ooooo ddddxxxx yyyycccc ii..16..ii (leaq, load/store, cscc, cbcc)
   10smm              rrrr load, s=sign extend, mm=op size
   110mm              rrrr store, mm=op size
   11100              rrrr leaq
   11101              cccc cscc (compare against ii..16..ii, y is ignored)
   11110              cccc cbcc (compare against y, ii..16..ii is target)

3-addr + 32-bit constant format (7 bytes)
110ooooo ddddxxxx yyyycccc ii..32..ii (leaq, load/store, cscc, cbcc)
   10smm              rrrr load, s=sign extend, mm=op size
   110mm              rrrr store, mm=op size
   11100              rrrr leaq
   11101              cccc cscc (compare against ii..32..ii, y is ignored)
   11110              cccc cbcc (compare against y, ii..32..ii is target)

3-addr + 2x32-bit constant format (11 bytes)
111ooooo ddddxxxx yyyycccc ii..32..ii pp..32..pp (cbcc)
   11001              cccc cbcc (compare against ii..32..ii, y is ignored, p..32..p is target)


rrrr: controls for all address computations (mov to/from memory, leaq)
xyvv x = enable reg x, y = enable reg y, vv = scaling factor for reg y
     disabling both x and y will source next ip instead (ip relative addressing)

aaaa: arithmetic operation

cccc: condition

dddd/xxxx/yyyy: register

all immediates are sign extended to 64 bits before use.
